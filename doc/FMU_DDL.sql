DROP DATABASE IF EXISTS FMU_DB;
CREATE DATABASE FMU_DB;
USE FMU_DB;

DROP TABLE IF EXISTS CONSULT, CONSULT_CATEGORIES, REQUEST_FOR_CONSULT, PAYMENT, REVIEW, MESSAGE, USER, CONSULT_IMAGE, REVIEW_IMAGE, PORTFOLIO, PORTFOLIO_IMAGE, PROTFOLIO_TAGS;

CREATE TABLE USER(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    TYPE VARCHAR(10) NOT NULL,
    GENDER VARCHAR(10),
    AGE INT,
    NICKNAME VARCHAR(50) NOT NULL UNIQUE,
    PROFILE_IMG VARCHAR(100),
    CREDIT INT DEFAULT 0,
    PLATFORM VARCHAR(30),
    API_ID VARCHAR(100),
    
    NAME VARCHAR(10),
    BELONG VARCHAR(30),
    OCCUPATION VARCHAR(30),
    PHONE VARCHAR(30) UNIQUE,
    
    createdAt DATETIME,
    updatedAt DATETIME
);

# USER
# GENERAL
# INSERT INTO USER(TYPE, GENDER, AGE, NICKNAME, PROFILE_IMG, CREDIT, PLATFORM, API_ID, NAME, BELONG, OCCUPATION, PHONE, createdAt)
# VALUES("General", "Male", 29, "JS_Park", "/default.jpg", 0, "KAKAO", 0000001, "박준성", "SSAFY", "무직", "010-2990-5719", CURRENT_TIMESTAMP);
# INSERT INTO USER(TYPE, GENDER, AGE, NICKNAME, PROFILE_IMG, CREDIT, PLATFORM, API_ID, NAME, BELONG, OCCUPATION, PHONE, createdAt)
# VALUES("General", "Male", 30, "TJ_Jeong", "/default.jpg", 0, "KAKAO", 0000003, "정택진", "SSAFY", "개발자", "010-2955-3325", CURRENT_TIMESTAMP);
# INSERT INTO USER(TYPE, GENDER, AGE, NICKNAME, PROFILE_IMG, CREDIT, PLATFORM, API_ID, NAME, BELONG, OCCUPATION, PHONE, createdAt)
# VALUES("General", "Male", 30, "JH_Hwang", "/default.jpg", 0, "KAKAO", 0000004, "황정호", "SSAFY", "아이돌", "010-1234-5678", CURRENT_TIMESTAMP);

# STYLIST
# INSERT INTO USER(TYPE, GENDER, AGE, NICKNAME, PROFILE_IMG, CREDIT, PLATFORM, API_ID, NAME, BELONG, OCCUPATION, PHONE, createdAt)
# VALUES("Stylist", "Female", 29, "준박", "/default.jpg", 0, "KAKAO", 0000002, "박준성", "SSAFY", "무직", "010-2990-5718", CURRENT_TIMESTAMP);
# INSERT INTO USER(TYPE, GENDER, AGE, NICKNAME, PROFILE_IMG, CREDIT, PLATFORM, API_ID, NAME, BELONG, OCCUPATION, PHONE, createdAt)
# VALUES("Stylist", "Female", 27, "SW_Cho", "/default.jpg", 0, "KAKAO", 0000005, "조서원", "SSAFY", "디자이너", "010-5204-1769", CURRENT_TIMESTAMP);
# INSERT INTO USER(TYPE, GENDER, AGE, NICKNAME, PROFILE_IMG, CREDIT, PLATFORM, API_ID, NAME, BELONG, OCCUPATION, PHONE, createdAt)
# VALUES("Stylist", "Female", 27, "DE_Song", "/default.jpg", 0, "KAKAO", 0000006, "송다은", "SSAFY", "디자이너", "010-7939-6800", CURRENT_TIMESTAMP);

CREATE TABLE CONSULT(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    STYLIST_ID INT,
    USER_ID INT,
    CATEGORY VARCHAR(20),
    GENDER VARCHAR(10),
    TOP VARCHAR(100),
    BOTTOM VARCHAR(100),
    HEIGHT INT,
    WEIGHT INT,
    BUDGET INT,
    CONTENTS VARCHAR(100),
    START_TIME TIMESTAMP,
    END_TIME TIMESTAMP,
    # REG_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    # REQUESTED, IN PROGRESS, DONE
    STATE VARCHAR(100) DEFAULT "REQUESTED",
    
    createdAt DATETIME,
    updatedAt DATETIME,

	CONSTRAINT FOREIGN KEY (STYLIST_ID) REFERENCES USER(ID) ON DELETE CASCADE,
	CONSTRAINT FOREIGN KEY (USER_ID) REFERENCES USER(ID) ON DELETE CASCADE
);

# CONSULT
# INSERT INTO CONSULT(USER_ID, CATEGORY, GENDER, TOP, BOTTOM, HEIGHT, WEIGHT, BUDGET, CONTENTS, START_TIME, END_TIME, createdAt)
# VALUES(1, "스트릿", "Male", "Large", "31", 180, 71, 100000, "추천해주세요 고맙습니다.", "2020-05-25 10:00:00", "2020-05-30 10:00:00", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT(USER_ID, CATEGORY, GENDER, TOP, BOTTOM, HEIGHT, WEIGHT, BUDGET, CONTENTS, START_TIME, END_TIME, createdAt)
# VALUES(2, "비지니스", "Male", "Large", "28", 185, 73, 200000, "추천해주세요 고맙습니다.", "2020-05-26 10:00:00", "2020-06-10 10:00:00", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT(USER_ID, CATEGORY, GENDER, TOP, BOTTOM, HEIGHT, WEIGHT, BUDGET, CONTENTS, START_TIME, END_TIME, createdAt)
# VALUES(3, "정장", "Male", "Large", "34", 180, 80, 100000, "결혼식 갑니다.", "2020-05-26 10:00:00", "2020-05-30 10:00:00", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT(USER_ID, STYLIST_ID, CATEGORY, GENDER, TOP, BOTTOM, HEIGHT, WEIGHT, BUDGET, CONTENTS, START_TIME, END_TIME, createdAt)
# VALUES(3, 5, "비지니스", "Male", "Large", "34", 180, 80, 100000, "소개팅 갑니다.", "2020-05-27 10:00:00", "2020-05-30 10:00:00", CURRENT_TIMESTAMP);

CREATE TABLE CONSULT_IMAGE(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    CONSULT_ID INT,
    IMAGE_PATH VARCHAR(50),
    
    createdAt DATETIME,
    updatedAt DATETIME,

    CONSTRAINT FOREIGN KEY (CONSULT_ID) REFERENCES CONSULT(ID) ON DELETE CASCADE
);

CREATE TABLE CONSULT_CATEGORIES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    CONSULT_ID INT,
    CATEGORY VARCHAR(50),
    
    createdAt DATETIME,
    updatedAt DATETIME,
    
    CONSTRAINT FOREIGN KEY (CONSULT_ID) REFERENCES CONSULT(ID) ON DELETE CASCADE
);

# CONSULT CATEGORIES
# INSERT INTO CONSULT_CATEGORIES(CONSULT_ID, CATEGORY, CREATEDAT)
# VALUES(1, "세미오버", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT_CATEGORIES(CONSULT_ID, CATEGORY, CREATEDAT)
# VALUES(1, "스트릿", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT_CATEGORIES(CONSULT_ID, CATEGORY, CREATEDAT)
# VALUES(1, "무신사", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT_CATEGORIES(CONSULT_ID, CATEGORY, CREATEDAT)
# VALUES(2, "TNGT", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT_CATEGORIES(CONSULT_ID, CATEGORY, CREATEDAT)
# VALUES(2, "RALPH LAUREN", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT_CATEGORIES(CONSULT_ID, CATEGORY, CREATEDAT)
# VALUES(2, "수트", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT_CATEGORIES(CONSULT_ID, CATEGORY, CREATEDAT)
# VALUES(3, "Brioni", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT_CATEGORIES(CONSULT_ID, CATEGORY, CREATEDAT)
# VALUES(3, "DAKS", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT_CATEGORIES(CONSULT_ID, CATEGORY, CREATEDAT)
# VALUES(3, "코트", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT_CATEGORIES(CONSULT_ID, CATEGORY, CREATEDAT)
# VALUES(3, "넥타이", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT_CATEGORIES(CONSULT_ID, CATEGORY, CREATEDAT)
# VALUES(4, "소개팅", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT_CATEGORIES(CONSULT_ID, CATEGORY, CREATEDAT)
# VALUES(4, "깔끔한", CURRENT_TIMESTAMP);
# INSERT INTO CONSULT_CATEGORIES(CONSULT_ID, CATEGORY, CREATEDAT)
# VALUES(4, "니트", CURRENT_TIMESTAMP);

CREATE TABLE REQUEST_FOR_CONSULT(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    STYLIST_ID INT,
    CONSULT_ID INT,
    # REQUESTED, ACCEPTED, DENIED
    STATE VARCHAR(100) DEFAULT "REQUESTED",
    # REG_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    createdAt DATETIME,
    updatedAt DATETIME,
    
    CONSTRAINT FOREIGN KEY (STYLIST_ID) REFERENCES USER(ID) ON DELETE CASCADE,
    CONSTRAINT FOREIGN KEY (CONSULT_ID) REFERENCES CONSULT(ID) ON DELETE CASCADE
);

# REQUEST_FOR CONSULT
# INSERT INTO REQUEST_FOR_CONSULT(STYLIST_ID, CONSULT_ID, createdAt)
# VALUES(4, 1, CURRENT_TIMESTAMP);
# INSERT INTO REQUEST_FOR_CONSULT(STYLIST_ID, CONSULT_ID, createdAt)
# VALUES(4, 2, CURRENT_TIMESTAMP);
# INSERT INTO REQUEST_FOR_CONSULT(STYLIST_ID, CONSULT_ID, createdAt)
# VALUES(5, 3, CURRENT_TIMESTAMP);
# INSERT INTO REQUEST_FOR_CONSULT(STYLIST_ID, CONSULT_ID, createdAt)
# VALUES(5, 4, CURRENT_TIMESTAMP);
# INSERT INTO REQUEST_FOR_CONSULT(STYLIST_ID, CONSULT_ID, createdAt)
# VALUES(6, 1, CURRENT_TIMESTAMP);
# INSERT INTO REQUEST_FOR_CONSULT(STYLIST_ID, CONSULT_ID, createdAt)
# VALUES(6, 4, CURRENT_TIMESTAMP);

CREATE TABLE PAYMENT(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    SOURCE INT,
    TARGET INT,
    AMOUNT INT,
    TYPE VARCHAR(30) NOT NULL,
    # REG_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    createdAt DATETIME,
    updatedAt DATETIME,

	CONSTRAINT FOREIGN KEY (SOURCE) REFERENCES USER(ID) ON DELETE CASCADE,
	CONSTRAINT FOREIGN KEY (TARGET) REFERENCES USER(ID) ON DELETE CASCADE
);

CREATE TABLE REVIEW(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    SOURCE INT,
    TARGET INT,
    CONTENTS VARCHAR(1000),
    # REG_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
    SCORE DOUBLE,
    
    createdAt DATETIME,
    updatedAt DATETIME,

	CONSTRAINT FOREIGN KEY (SOURCE) REFERENCES USER(ID) ON DELETE CASCADE,
	CONSTRAINT FOREIGN KEY (TARGET) REFERENCES USER(ID) ON DELETE CASCADE,
    CONSTRAINT FOREIGN KEY (CONSULT_ID) REFERENCES CONSULT(ID) ON DELETE CASCADE
);

# REVIEW
# INSERT INTO REVIEW(SOURCE, TARGET, CONTENTS, SCORE, createdAt)
# VALUES(1, 4, "깔끔하게 잘 코디해주시고 친절하십니다.", 5, CURRENT_TIMESTAMP);
# INSERT INTO REVIEW(SOURCE, TARGET, CONTENTS, SCORE, createdAt)
# VALUES(2, 4, "ㄳㄳ", 4, CURRENT_TIMESTAMP);
# INSERT INTO REVIEW(SOURCE, TARGET, CONTENTS, SCORE, createdAt)
# VALUES(3, 4, "추천합니다", 5, CURRENT_TIMESTAMP);
# INSERT INTO REVIEW(SOURCE, TARGET, CONTENTS, SCORE, createdAt)
# VALUES(1, 5, "깔끔하게 잘 코디해주시고 친절하십니다.", 5, CURRENT_TIMESTAMP);
# INSERT INTO REVIEW(SOURCE, TARGET, CONTENTS, SCORE, createdAt)
# VALUES(3, 5, "추천합니다", 5, CURRENT_TIMESTAMP);
# INSERT INTO REVIEW(SOURCE, TARGET, CONTENTS, SCORE, createdAt)
# VALUES(3, 6, "ㄳㄳ", 5, CURRENT_TIMESTAMP);

CREATE TABLE REVIEW_IMAGE(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    REVIEW_ID INT,
    IMAGE_PATH VARCHAR(100),
    
    createdAt DATETIME,
    updatedAt DATETIME,
    
    CONSTRAINT FOREIGN KEY (REVIEW_ID) REFERENCES REVIEW(ID) ON DELETE CASCADE
);

CREATE TABLE MESSAGE(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    SOURCE INT,
    TARGET INT,
    CONTENTS VARCHAR(200),
    # REG_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    READED BOOLEAN DEFAULT FALSE,
    
    createdAt DATETIME,
    updatedAt DATETIME,
    
	CONSTRAINT FOREIGN KEY (SOURCE) REFERENCES USER(ID) ON DELETE CASCADE,
	CONSTRAINT FOREIGN KEY (TARGET) REFERENCES USER(ID) ON DELETE CASCADE
);

# MESSAGE
# INSERT INTO MESSAGE(SOURCE, TARGET, CONTENTS, READED, createdAt)
# VALUES (1, 4, "요청 확인 부탁드려요.", TRUE, CURRENT_TIMESTAMP);
# INSERT INTO MESSAGE(SOURCE, TARGET, CONTENTS, createdAt)
# VALUES (4, 1, "확인 했습니다. 연락 주세요.", CURRENT_TIMESTAMP);
# INSERT INTO MESSAGE(SOURCE, TARGET, CONTENTS, createdAt)
# VALUES (1, 3, "요청 확인 부탁드려요.", CURRENT_TIMESTAMP);

CREATE TABLE PORTFOLIO(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    STYLIST_ID INT,
    TITLE VARCHAR(100),
    CONTENTS VARCHAR(2000),
    
    createdAt DATETIME,
    updatedAt DATETIME,
    
    CONSTRAINT FOREIGN KEY (STYLIST_ID) REFERENCES USER(ID) ON DELETE CASCADE
);

# PORTFOLIO
# INSERT INTO PORTFOLIO(STYLIST_ID, TITLE, CONTENTS, CREATEDAT)
# VALUES(4, "준박 스타일리스트", "본문본문본문본문본문본문본문본문본문본문본문", CURRENT_TIMESTAMP);
# INSERT INTO PORTFOLIO(STYLIST_ID, TITLE, CONTENTS, CREATEDAT)
# VALUES(5, "조서원 스타일리스트", "본문본문본문본문본문본문본문본문본문본문본문", CURRENT_TIMESTAMP);
# INSERT INTO PORTFOLIO(STYLIST_ID, TITLE, CONTENTS, CREATEDAT)
# VALUES(6, "송다은 스타일리스트", "본문본문본문본문본문본문본문본문본문본문본문", CURRENT_TIMESTAMP);

CREATE TABLE PORTFOLIO_TAGS(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    PORTFOLIO_ID INT,
    TAG VARCHAR(20),
    
    createdAt DATETIME,
    updatedAt DATETIME,
    
    CONSTRAINT FOREIGN KEY (PORTFOLIO_ID) REFERENCES PORTFOLIO(ID) ON DELETE CASCADE
);

# PORTFOLIO_TAGS
# INSERT INTO PORTFOLIO_TAGS(PORTFOLIO_ID, TAG, CREATEDAT)
# VALUES(1, "정장", CURRENT_TIMESTAMP);
# INSERT INTO PORTFOLIO_TAGS(PORTFOLIO_ID, TAG, CREATEDAT)
# VALUES(1, "비지니스", CURRENT_TIMESTAMP);
# INSERT INTO PORTFOLIO_TAGS(PORTFOLIO_ID, TAG, CREATEDAT)
# VALUES(1, "깔끔한", CURRENT_TIMESTAMP);
# INSERT INTO PORTFOLIO_TAGS(PORTFOLIO_ID, TAG, CREATEDAT)
# VALUES(2, "니트", CURRENT_TIMESTAMP);
# INSERT INTO PORTFOLIO_TAGS(PORTFOLIO_ID, TAG, CREATEDAT)
# VALUES(2, "맨투맨", CURRENT_TIMESTAMP);
# INSERT INTO PORTFOLIO_TAGS(PORTFOLIO_ID, TAG, CREATEDAT)
# VALUES(2, "데일리", CURRENT_TIMESTAMP);
# INSERT INTO PORTFOLIO_TAGS(PORTFOLIO_ID, TAG, CREATEDAT)
# VALUES(3, "디자이너", CURRENT_TIMESTAMP);
# INSERT INTO PORTFOLIO_TAGS(PORTFOLIO_ID, TAG, CREATEDAT)
# VALUES(3, "패션", CURRENT_TIMESTAMP);
# INSERT INTO PORTFOLIO_TAGS(PORTFOLIO_ID, TAG, CREATEDAT)
# VALUES(3, "스트릿", CURRENT_TIMESTAMP);

CREATE TABLE PORTFOLIO_IMAGE(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    PORTFOLIO_ID INT,
    IMAGE_PATH VARCHAR(100),
    
    createdAt DATETIME,
    updatedAt DATETIME,
    
    CONSTRAINT FOREIGN KEY (PORTFOLIO_ID) REFERENCES PORTFOLIO(ID) ON DELETE CASCADE
);

SHOW TABLES;
# SELECT * FROM CONSULT;
# SELECT * FROM REQUEST_FOR_CONSULT;
# SELECT * FROM MESSAGE;
# SELECT * FROM PORTFOLIO;
# SELECT * FROM USER;
# SELECT * FROM PORTFOLIO_TAGS;
# SELECT * FROM CONSULT_CATEGORIES;



USE FMU_DB;
SELECT * FROM PORTFOLIO;
SELECT * FROM PORTFOLIO_TAGS;

DELETE FROM PORTFOLIO WHERE ID >= 7;


